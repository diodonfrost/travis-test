---
language: ruby
rvm:
  - 2.5.1
services:
  - docker

env:
  - distribution: centos
    version: "8"
  - distribution: centos
    version: "7"
  - distribution: centos
    version: "6"
  - distribution: fedora
    version: "29"
  - distribution: fedora
    version: "28"
  - distribution: fedora
    version: "27"
  - distribution: ubuntu
    version: "18.04"
  - distribution: ubuntu
    version: "16.04"
  - distribution: ubuntu
    version: "14.04"
  - distribution: debian
    version: "9"
  - distribution: debian
    version: "8"
  - distribution: debian
    version: "7"
  - distribution: oraclelinux
    version: "8"
  - distribution: oraclelinux
    version: "7"
  - distribution: oraclelinux
    version: "6"
  - distribution: amazonlinux
    version: "2"
  - distribution: amazonlinux
    version: "1"
  - distribution: opensuse
    version: "42.3"
  - distribution: opensuse
    version: "42.2"
  - distribution: opensuse
    version: "13.2"
  - distribution: archlinux
    version: "rolling"

before_install:
  - 'sudo apt-get update && sudo apt-get install ansible'
script:
  - 'ls -l /home'
  - 'sudo ansible-galaxy install -r requirement.yml'
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/tmp/ diodonfrost/${distribution}-${version}-ansible:latest > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-galaxy install -r /tmp/requirement.yml'
  # Test role
  - 'inspec exec tests/inspec -t docker://$(cat ${container_id})'

  # Docker ps
  - 'docker ps -a'

jobs:
  include:
    - stage: push
      script:
        # Login on dockerhub.io before pushing
        - 'echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin'

        # Pushing image to dockerhub
        - 'docker push diodonfrost/${distribution}-${version}-ansible:latest'

        # Delete container
        - 'sudo docker rm -f "$(cat ${container_id})"'

notifications:
  email: false

